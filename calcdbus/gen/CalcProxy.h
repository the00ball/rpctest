
/*
 *	This file was automatically generated by dbusxx-xml2cpp; DO NOT EDIT!
 */

#ifndef __dbusxx__gen_CalcProxy_h__PROXY_MARSHAL_H
#define __dbusxx__gen_CalcProxy_h__PROXY_MARSHAL_H

#include <dbus-c++-1/dbus-c++/interface.h>
#include <dbus-c++-1/dbus-c++/message.h>
#include <cstdint>

namespace rpctest {
namespace dbus {

class Calc_proxy
: public ::DBus::InterfaceProxy
{
public:

    Calc_proxy()
    : ::DBus::InterfaceProxy("rpctest.dbus.Calc")
    {
    }

public:

    /* properties exported by this interface */
public:

    /* methods exported by this interface,
     * this functions will invoke the corresponding methods on the remote objects
     */
    int32_t Sum(const int32_t& a, const int32_t& b)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << a;
        wi << b;
        call.member("Sum");
        ::DBus::Message ret = invoke_method (call);
        ::DBus::MessageIter ri = ret.reader();

        int32_t argout;
        ri >> argout;
        return argout;
    }


public:

    /* signal handlers for this interface
     */

private:

    /* unmarshalers (to unpack the DBus message before calling the actual signal handler)
     */
};

} } 
#endif //__dbusxx__gen_CalcProxy_h__PROXY_MARSHAL_H
